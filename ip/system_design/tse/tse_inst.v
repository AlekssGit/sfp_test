	tse u0 (
		.clk                  (_connected_to_clk_),                  //   input,   width = 1,        control_port_clock_connection.clk
		.reset                (_connected_to_reset_),                //   input,   width = 1,                     reset_connection.reset
		.reg_data_out         (_connected_to_reg_data_out_),         //  output,  width = 32,                         control_port.readdata
		.reg_rd               (_connected_to_reg_rd_),               //   input,   width = 1,                                     .read
		.reg_data_in          (_connected_to_reg_data_in_),          //   input,  width = 32,                                     .writedata
		.reg_wr               (_connected_to_reg_wr_),               //   input,   width = 1,                                     .write
		.reg_busy             (_connected_to_reg_busy_),             //  output,   width = 1,                                     .waitrequest
		.reg_addr             (_connected_to_reg_addr_),             //   input,  width = 10,                                     .address
		.rx_afull_clk         (_connected_to_rx_afull_clk_),         //   input,   width = 1, receive_fifo_status_clock_connection.clk
		.rx_afull_data        (_connected_to_rx_afull_data_),        //   input,   width = 2,                  receive_fifo_status.data
		.rx_afull_valid       (_connected_to_rx_afull_valid_),       //   input,   width = 1,                                     .valid
		.rx_afull_channel     (_connected_to_rx_afull_channel_),     //   input,   width = 2,                                     .channel
		.mac_rx_clk_0         (_connected_to_mac_rx_clk_0_),         //  output,   width = 1,            mac_rx_clock_connection_0.clk
		.mac_tx_clk_0         (_connected_to_mac_tx_clk_0_),         //  output,   width = 1,            mac_tx_clock_connection_0.clk
		.data_rx_data_0       (_connected_to_data_rx_data_0_),       //  output,   width = 8,                            receive_0.data
		.data_rx_eop_0        (_connected_to_data_rx_eop_0_),        //  output,   width = 1,                                     .endofpacket
		.data_rx_error_0      (_connected_to_data_rx_error_0_),      //  output,   width = 5,                                     .error
		.data_rx_ready_0      (_connected_to_data_rx_ready_0_),      //   input,   width = 1,                                     .ready
		.data_rx_sop_0        (_connected_to_data_rx_sop_0_),        //  output,   width = 1,                                     .startofpacket
		.data_rx_valid_0      (_connected_to_data_rx_valid_0_),      //  output,   width = 1,                                     .valid
		.data_tx_data_0       (_connected_to_data_tx_data_0_),       //   input,   width = 8,                           transmit_0.data
		.data_tx_eop_0        (_connected_to_data_tx_eop_0_),        //   input,   width = 1,                                     .endofpacket
		.data_tx_error_0      (_connected_to_data_tx_error_0_),      //   input,   width = 1,                                     .error
		.data_tx_ready_0      (_connected_to_data_tx_ready_0_),      //  output,   width = 1,                                     .ready
		.data_tx_sop_0        (_connected_to_data_tx_sop_0_),        //   input,   width = 1,                                     .startofpacket
		.data_tx_valid_0      (_connected_to_data_tx_valid_0_),      //   input,   width = 1,                                     .valid
		.pkt_class_data_0     (_connected_to_pkt_class_data_0_),     //  output,   width = 5,                receive_packet_type_0.data
		.pkt_class_valid_0    (_connected_to_pkt_class_valid_0_),    //  output,   width = 1,                                     .valid
		.magic_wakeup_0       (_connected_to_magic_wakeup_0_),       //  output,   width = 1,                mac_misc_connection_0.magic_wakeup
		.magic_sleep_n_0      (_connected_to_magic_sleep_n_0_),      //   input,   width = 1,                                     .magic_sleep_n
		.tx_crc_fwd_0         (_connected_to_tx_crc_fwd_0_),         //   input,   width = 1,                                     .tx_crc_fwd
		.mdc                  (_connected_to_mdc_),                  //  output,   width = 1,                  mac_mdio_connection.mdc
		.mdio_in              (_connected_to_mdio_in_),              //   input,   width = 1,                                     .mdio_in
		.mdio_out             (_connected_to_mdio_out_),             //  output,   width = 1,                                     .mdio_out
		.mdio_oen             (_connected_to_mdio_oen_),             //  output,   width = 1,                                     .mdio_oen
		.mac_rx_clk_1         (_connected_to_mac_rx_clk_1_),         //  output,   width = 1,            mac_rx_clock_connection_1.clk
		.mac_tx_clk_1         (_connected_to_mac_tx_clk_1_),         //  output,   width = 1,            mac_tx_clock_connection_1.clk
		.data_rx_data_1       (_connected_to_data_rx_data_1_),       //  output,   width = 8,                            receive_1.data
		.data_rx_eop_1        (_connected_to_data_rx_eop_1_),        //  output,   width = 1,                                     .endofpacket
		.data_rx_error_1      (_connected_to_data_rx_error_1_),      //  output,   width = 5,                                     .error
		.data_rx_ready_1      (_connected_to_data_rx_ready_1_),      //   input,   width = 1,                                     .ready
		.data_rx_sop_1        (_connected_to_data_rx_sop_1_),        //  output,   width = 1,                                     .startofpacket
		.data_rx_valid_1      (_connected_to_data_rx_valid_1_),      //  output,   width = 1,                                     .valid
		.data_tx_data_1       (_connected_to_data_tx_data_1_),       //   input,   width = 8,                           transmit_1.data
		.data_tx_eop_1        (_connected_to_data_tx_eop_1_),        //   input,   width = 1,                                     .endofpacket
		.data_tx_error_1      (_connected_to_data_tx_error_1_),      //   input,   width = 1,                                     .error
		.data_tx_ready_1      (_connected_to_data_tx_ready_1_),      //  output,   width = 1,                                     .ready
		.data_tx_sop_1        (_connected_to_data_tx_sop_1_),        //   input,   width = 1,                                     .startofpacket
		.data_tx_valid_1      (_connected_to_data_tx_valid_1_),      //   input,   width = 1,                                     .valid
		.pkt_class_data_1     (_connected_to_pkt_class_data_1_),     //  output,   width = 5,                receive_packet_type_1.data
		.pkt_class_valid_1    (_connected_to_pkt_class_valid_1_),    //  output,   width = 1,                                     .valid
		.magic_wakeup_1       (_connected_to_magic_wakeup_1_),       //  output,   width = 1,                mac_misc_connection_1.magic_wakeup
		.magic_sleep_n_1      (_connected_to_magic_sleep_n_1_),      //   input,   width = 1,                                     .magic_sleep_n
		.tx_crc_fwd_1         (_connected_to_tx_crc_fwd_1_),         //   input,   width = 1,                                     .tx_crc_fwd
		.mac_rx_clk_2         (_connected_to_mac_rx_clk_2_),         //  output,   width = 1,            mac_rx_clock_connection_2.clk
		.mac_tx_clk_2         (_connected_to_mac_tx_clk_2_),         //  output,   width = 1,            mac_tx_clock_connection_2.clk
		.data_rx_data_2       (_connected_to_data_rx_data_2_),       //  output,   width = 8,                            receive_2.data
		.data_rx_eop_2        (_connected_to_data_rx_eop_2_),        //  output,   width = 1,                                     .endofpacket
		.data_rx_error_2      (_connected_to_data_rx_error_2_),      //  output,   width = 5,                                     .error
		.data_rx_ready_2      (_connected_to_data_rx_ready_2_),      //   input,   width = 1,                                     .ready
		.data_rx_sop_2        (_connected_to_data_rx_sop_2_),        //  output,   width = 1,                                     .startofpacket
		.data_rx_valid_2      (_connected_to_data_rx_valid_2_),      //  output,   width = 1,                                     .valid
		.data_tx_data_2       (_connected_to_data_tx_data_2_),       //   input,   width = 8,                           transmit_2.data
		.data_tx_eop_2        (_connected_to_data_tx_eop_2_),        //   input,   width = 1,                                     .endofpacket
		.data_tx_error_2      (_connected_to_data_tx_error_2_),      //   input,   width = 1,                                     .error
		.data_tx_ready_2      (_connected_to_data_tx_ready_2_),      //  output,   width = 1,                                     .ready
		.data_tx_sop_2        (_connected_to_data_tx_sop_2_),        //   input,   width = 1,                                     .startofpacket
		.data_tx_valid_2      (_connected_to_data_tx_valid_2_),      //   input,   width = 1,                                     .valid
		.pkt_class_data_2     (_connected_to_pkt_class_data_2_),     //  output,   width = 5,                receive_packet_type_2.data
		.pkt_class_valid_2    (_connected_to_pkt_class_valid_2_),    //  output,   width = 1,                                     .valid
		.magic_wakeup_2       (_connected_to_magic_wakeup_2_),       //  output,   width = 1,                mac_misc_connection_2.magic_wakeup
		.magic_sleep_n_2      (_connected_to_magic_sleep_n_2_),      //   input,   width = 1,                                     .magic_sleep_n
		.tx_crc_fwd_2         (_connected_to_tx_crc_fwd_2_),         //   input,   width = 1,                                     .tx_crc_fwd
		.mac_rx_clk_3         (_connected_to_mac_rx_clk_3_),         //  output,   width = 1,            mac_rx_clock_connection_3.clk
		.mac_tx_clk_3         (_connected_to_mac_tx_clk_3_),         //  output,   width = 1,            mac_tx_clock_connection_3.clk
		.data_rx_data_3       (_connected_to_data_rx_data_3_),       //  output,   width = 8,                            receive_3.data
		.data_rx_eop_3        (_connected_to_data_rx_eop_3_),        //  output,   width = 1,                                     .endofpacket
		.data_rx_error_3      (_connected_to_data_rx_error_3_),      //  output,   width = 5,                                     .error
		.data_rx_ready_3      (_connected_to_data_rx_ready_3_),      //   input,   width = 1,                                     .ready
		.data_rx_sop_3        (_connected_to_data_rx_sop_3_),        //  output,   width = 1,                                     .startofpacket
		.data_rx_valid_3      (_connected_to_data_rx_valid_3_),      //  output,   width = 1,                                     .valid
		.data_tx_data_3       (_connected_to_data_tx_data_3_),       //   input,   width = 8,                           transmit_3.data
		.data_tx_eop_3        (_connected_to_data_tx_eop_3_),        //   input,   width = 1,                                     .endofpacket
		.data_tx_error_3      (_connected_to_data_tx_error_3_),      //   input,   width = 1,                                     .error
		.data_tx_ready_3      (_connected_to_data_tx_ready_3_),      //  output,   width = 1,                                     .ready
		.data_tx_sop_3        (_connected_to_data_tx_sop_3_),        //   input,   width = 1,                                     .startofpacket
		.data_tx_valid_3      (_connected_to_data_tx_valid_3_),      //   input,   width = 1,                                     .valid
		.pkt_class_data_3     (_connected_to_pkt_class_data_3_),     //  output,   width = 5,                receive_packet_type_3.data
		.pkt_class_valid_3    (_connected_to_pkt_class_valid_3_),    //  output,   width = 1,                                     .valid
		.magic_wakeup_3       (_connected_to_magic_wakeup_3_),       //  output,   width = 1,                mac_misc_connection_3.magic_wakeup
		.magic_sleep_n_3      (_connected_to_magic_sleep_n_3_),      //   input,   width = 1,                                     .magic_sleep_n
		.tx_crc_fwd_3         (_connected_to_tx_crc_fwd_3_),         //   input,   width = 1,                                     .tx_crc_fwd
		.ref_clk              (_connected_to_ref_clk_),              //   input,   width = 1,         pcs_ref_clk_clock_connection.clk
		.led_crs_0            (_connected_to_led_crs_0_),            //  output,   width = 1,              status_led_connection_0.crs
		.led_link_0           (_connected_to_led_link_0_),           //  output,   width = 1,                                     .link
		.led_panel_link_0     (_connected_to_led_panel_link_0_),     //  output,   width = 1,                                     .panel_link
		.led_col_0            (_connected_to_led_col_0_),            //  output,   width = 1,                                     .col
		.led_an_0             (_connected_to_led_an_0_),             //  output,   width = 1,                                     .an
		.led_char_err_0       (_connected_to_led_char_err_0_),       //  output,   width = 1,                                     .char_err
		.led_disp_err_0       (_connected_to_led_disp_err_0_),       //  output,   width = 1,                                     .disp_err
		.tx_analogreset_0     (_connected_to_tx_analogreset_0_),     //   input,   width = 1,                     tx_analogreset_0.tx_analogreset
		.tx_digitalreset_0    (_connected_to_tx_digitalreset_0_),    //   input,   width = 1,                    tx_digitalreset_0.tx_digitalreset
		.rx_analogreset_0     (_connected_to_rx_analogreset_0_),     //   input,   width = 1,                     rx_analogreset_0.rx_analogreset
		.rx_digitalreset_0    (_connected_to_rx_digitalreset_0_),    //   input,   width = 1,                    rx_digitalreset_0.rx_digitalreset
		.tx_cal_busy_0        (_connected_to_tx_cal_busy_0_),        //  output,   width = 1,                        tx_cal_busy_0.tx_cal_busy
		.rx_cal_busy_0        (_connected_to_rx_cal_busy_0_),        //  output,   width = 1,                        rx_cal_busy_0.rx_cal_busy
		.tx_serial_clk_0      (_connected_to_tx_serial_clk_0_),      //   input,   width = 1,                      tx_serial_clk_0.clk
		.rx_cdr_refclk_0      (_connected_to_rx_cdr_refclk_0_),      //   input,   width = 1,                      rx_cdr_refclk_0.clk
		.rx_set_locktodata_0  (_connected_to_rx_set_locktodata_0_),  //   input,   width = 1,                  rx_set_locktodata_0.rx_set_locktodata
		.rx_set_locktoref_0   (_connected_to_rx_set_locktoref_0_),   //   input,   width = 1,                   rx_set_locktoref_0.rx_set_locktoref
		.rx_is_lockedtoref_0  (_connected_to_rx_is_lockedtoref_0_),  //  output,   width = 1,                  rx_is_lockedtoref_0.rx_is_lockedtoref
		.rx_is_lockedtodata_0 (_connected_to_rx_is_lockedtodata_0_), //  output,   width = 1,                 rx_is_lockedtodata_0.rx_is_lockedtodata
		.rxp_0                (_connected_to_rxp_0_),                //   input,   width = 1,                  serial_connection_0.rxp
		.txp_0                (_connected_to_txp_0_),                //  output,   width = 1,                                     .txp
		.rx_recovclkout_0     (_connected_to_rx_recovclkout_0_),     //  output,   width = 1,          serdes_control_connection_0.export
		.led_crs_1            (_connected_to_led_crs_1_),            //  output,   width = 1,              status_led_connection_1.crs
		.led_link_1           (_connected_to_led_link_1_),           //  output,   width = 1,                                     .link
		.led_panel_link_1     (_connected_to_led_panel_link_1_),     //  output,   width = 1,                                     .panel_link
		.led_col_1            (_connected_to_led_col_1_),            //  output,   width = 1,                                     .col
		.led_an_1             (_connected_to_led_an_1_),             //  output,   width = 1,                                     .an
		.led_char_err_1       (_connected_to_led_char_err_1_),       //  output,   width = 1,                                     .char_err
		.led_disp_err_1       (_connected_to_led_disp_err_1_),       //  output,   width = 1,                                     .disp_err
		.tx_analogreset_1     (_connected_to_tx_analogreset_1_),     //   input,   width = 1,                     tx_analogreset_1.tx_analogreset
		.tx_digitalreset_1    (_connected_to_tx_digitalreset_1_),    //   input,   width = 1,                    tx_digitalreset_1.tx_digitalreset
		.rx_analogreset_1     (_connected_to_rx_analogreset_1_),     //   input,   width = 1,                     rx_analogreset_1.rx_analogreset
		.rx_digitalreset_1    (_connected_to_rx_digitalreset_1_),    //   input,   width = 1,                    rx_digitalreset_1.rx_digitalreset
		.tx_cal_busy_1        (_connected_to_tx_cal_busy_1_),        //  output,   width = 1,                        tx_cal_busy_1.tx_cal_busy
		.rx_cal_busy_1        (_connected_to_rx_cal_busy_1_),        //  output,   width = 1,                        rx_cal_busy_1.rx_cal_busy
		.tx_serial_clk_1      (_connected_to_tx_serial_clk_1_),      //   input,   width = 1,                      tx_serial_clk_1.clk
		.rx_cdr_refclk_1      (_connected_to_rx_cdr_refclk_1_),      //   input,   width = 1,                      rx_cdr_refclk_1.clk
		.rx_set_locktodata_1  (_connected_to_rx_set_locktodata_1_),  //   input,   width = 1,                  rx_set_locktodata_1.rx_set_locktodata
		.rx_set_locktoref_1   (_connected_to_rx_set_locktoref_1_),   //   input,   width = 1,                   rx_set_locktoref_1.rx_set_locktoref
		.rx_is_lockedtoref_1  (_connected_to_rx_is_lockedtoref_1_),  //  output,   width = 1,                  rx_is_lockedtoref_1.rx_is_lockedtoref
		.rx_is_lockedtodata_1 (_connected_to_rx_is_lockedtodata_1_), //  output,   width = 1,                 rx_is_lockedtodata_1.rx_is_lockedtodata
		.rxp_1                (_connected_to_rxp_1_),                //   input,   width = 1,                  serial_connection_1.rxp
		.txp_1                (_connected_to_txp_1_),                //  output,   width = 1,                                     .txp
		.rx_recovclkout_1     (_connected_to_rx_recovclkout_1_),     //  output,   width = 1,          serdes_control_connection_1.export
		.led_crs_2            (_connected_to_led_crs_2_),            //  output,   width = 1,              status_led_connection_2.crs
		.led_link_2           (_connected_to_led_link_2_),           //  output,   width = 1,                                     .link
		.led_panel_link_2     (_connected_to_led_panel_link_2_),     //  output,   width = 1,                                     .panel_link
		.led_col_2            (_connected_to_led_col_2_),            //  output,   width = 1,                                     .col
		.led_an_2             (_connected_to_led_an_2_),             //  output,   width = 1,                                     .an
		.led_char_err_2       (_connected_to_led_char_err_2_),       //  output,   width = 1,                                     .char_err
		.led_disp_err_2       (_connected_to_led_disp_err_2_),       //  output,   width = 1,                                     .disp_err
		.tx_analogreset_2     (_connected_to_tx_analogreset_2_),     //   input,   width = 1,                     tx_analogreset_2.tx_analogreset
		.tx_digitalreset_2    (_connected_to_tx_digitalreset_2_),    //   input,   width = 1,                    tx_digitalreset_2.tx_digitalreset
		.rx_analogreset_2     (_connected_to_rx_analogreset_2_),     //   input,   width = 1,                     rx_analogreset_2.rx_analogreset
		.rx_digitalreset_2    (_connected_to_rx_digitalreset_2_),    //   input,   width = 1,                    rx_digitalreset_2.rx_digitalreset
		.tx_cal_busy_2        (_connected_to_tx_cal_busy_2_),        //  output,   width = 1,                        tx_cal_busy_2.tx_cal_busy
		.rx_cal_busy_2        (_connected_to_rx_cal_busy_2_),        //  output,   width = 1,                        rx_cal_busy_2.rx_cal_busy
		.tx_serial_clk_2      (_connected_to_tx_serial_clk_2_),      //   input,   width = 1,                      tx_serial_clk_2.clk
		.rx_cdr_refclk_2      (_connected_to_rx_cdr_refclk_2_),      //   input,   width = 1,                      rx_cdr_refclk_2.clk
		.rx_set_locktodata_2  (_connected_to_rx_set_locktodata_2_),  //   input,   width = 1,                  rx_set_locktodata_2.rx_set_locktodata
		.rx_set_locktoref_2   (_connected_to_rx_set_locktoref_2_),   //   input,   width = 1,                   rx_set_locktoref_2.rx_set_locktoref
		.rx_is_lockedtoref_2  (_connected_to_rx_is_lockedtoref_2_),  //  output,   width = 1,                  rx_is_lockedtoref_2.rx_is_lockedtoref
		.rx_is_lockedtodata_2 (_connected_to_rx_is_lockedtodata_2_), //  output,   width = 1,                 rx_is_lockedtodata_2.rx_is_lockedtodata
		.rxp_2                (_connected_to_rxp_2_),                //   input,   width = 1,                  serial_connection_2.rxp
		.txp_2                (_connected_to_txp_2_),                //  output,   width = 1,                                     .txp
		.rx_recovclkout_2     (_connected_to_rx_recovclkout_2_),     //  output,   width = 1,          serdes_control_connection_2.export
		.led_crs_3            (_connected_to_led_crs_3_),            //  output,   width = 1,              status_led_connection_3.crs
		.led_link_3           (_connected_to_led_link_3_),           //  output,   width = 1,                                     .link
		.led_panel_link_3     (_connected_to_led_panel_link_3_),     //  output,   width = 1,                                     .panel_link
		.led_col_3            (_connected_to_led_col_3_),            //  output,   width = 1,                                     .col
		.led_an_3             (_connected_to_led_an_3_),             //  output,   width = 1,                                     .an
		.led_char_err_3       (_connected_to_led_char_err_3_),       //  output,   width = 1,                                     .char_err
		.led_disp_err_3       (_connected_to_led_disp_err_3_),       //  output,   width = 1,                                     .disp_err
		.tx_analogreset_3     (_connected_to_tx_analogreset_3_),     //   input,   width = 1,                     tx_analogreset_3.tx_analogreset
		.tx_digitalreset_3    (_connected_to_tx_digitalreset_3_),    //   input,   width = 1,                    tx_digitalreset_3.tx_digitalreset
		.rx_analogreset_3     (_connected_to_rx_analogreset_3_),     //   input,   width = 1,                     rx_analogreset_3.rx_analogreset
		.rx_digitalreset_3    (_connected_to_rx_digitalreset_3_),    //   input,   width = 1,                    rx_digitalreset_3.rx_digitalreset
		.tx_cal_busy_3        (_connected_to_tx_cal_busy_3_),        //  output,   width = 1,                        tx_cal_busy_3.tx_cal_busy
		.rx_cal_busy_3        (_connected_to_rx_cal_busy_3_),        //  output,   width = 1,                        rx_cal_busy_3.rx_cal_busy
		.tx_serial_clk_3      (_connected_to_tx_serial_clk_3_),      //   input,   width = 1,                      tx_serial_clk_3.clk
		.rx_cdr_refclk_3      (_connected_to_rx_cdr_refclk_3_),      //   input,   width = 1,                      rx_cdr_refclk_3.clk
		.rx_set_locktodata_3  (_connected_to_rx_set_locktodata_3_),  //   input,   width = 1,                  rx_set_locktodata_3.rx_set_locktodata
		.rx_set_locktoref_3   (_connected_to_rx_set_locktoref_3_),   //   input,   width = 1,                   rx_set_locktoref_3.rx_set_locktoref
		.rx_is_lockedtoref_3  (_connected_to_rx_is_lockedtoref_3_),  //  output,   width = 1,                  rx_is_lockedtoref_3.rx_is_lockedtoref
		.rx_is_lockedtodata_3 (_connected_to_rx_is_lockedtodata_3_), //  output,   width = 1,                 rx_is_lockedtodata_3.rx_is_lockedtodata
		.rxp_3                (_connected_to_rxp_3_),                //   input,   width = 1,                  serial_connection_3.rxp
		.txp_3                (_connected_to_txp_3_),                //  output,   width = 1,                                     .txp
		.rx_recovclkout_3     (_connected_to_rx_recovclkout_3_)      //  output,   width = 1,          serdes_control_connection_3.export
	);

