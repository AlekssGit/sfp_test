	component pcie is
		port (
			coreclkout_hip           : out std_logic;                                         -- clk
			refclk                   : in  std_logic                      := 'X';             -- clk
			npor                     : in  std_logic                      := 'X';             -- npor
			pin_perst                : in  std_logic                      := 'X';             -- pin_perst
			app_nreset_status        : out std_logic;                                         -- reset_n
			test_in                  : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- test_in
			simu_mode_pipe           : in  std_logic                      := 'X';             -- simu_mode_pipe
			sim_pipe_pclk_in         : in  std_logic                      := 'X';             -- sim_pipe_pclk_in
			sim_pipe_rate            : out std_logic_vector(1 downto 0);                      -- sim_pipe_rate
			sim_ltssmstate           : out std_logic_vector(4 downto 0);                      -- sim_ltssmstate
			eidleinfersel0           : out std_logic_vector(2 downto 0);                      -- eidleinfersel0
			eidleinfersel1           : out std_logic_vector(2 downto 0);                      -- eidleinfersel1
			eidleinfersel2           : out std_logic_vector(2 downto 0);                      -- eidleinfersel2
			eidleinfersel3           : out std_logic_vector(2 downto 0);                      -- eidleinfersel3
			powerdown0               : out std_logic_vector(1 downto 0);                      -- powerdown0
			powerdown1               : out std_logic_vector(1 downto 0);                      -- powerdown1
			powerdown2               : out std_logic_vector(1 downto 0);                      -- powerdown2
			powerdown3               : out std_logic_vector(1 downto 0);                      -- powerdown3
			rxpolarity0              : out std_logic;                                         -- rxpolarity0
			rxpolarity1              : out std_logic;                                         -- rxpolarity1
			rxpolarity2              : out std_logic;                                         -- rxpolarity2
			rxpolarity3              : out std_logic;                                         -- rxpolarity3
			txcompl0                 : out std_logic;                                         -- txcompl0
			txcompl1                 : out std_logic;                                         -- txcompl1
			txcompl2                 : out std_logic;                                         -- txcompl2
			txcompl3                 : out std_logic;                                         -- txcompl3
			txdata0                  : out std_logic_vector(31 downto 0);                     -- txdata0
			txdata1                  : out std_logic_vector(31 downto 0);                     -- txdata1
			txdata2                  : out std_logic_vector(31 downto 0);                     -- txdata2
			txdata3                  : out std_logic_vector(31 downto 0);                     -- txdata3
			txdatak0                 : out std_logic_vector(3 downto 0);                      -- txdatak0
			txdatak1                 : out std_logic_vector(3 downto 0);                      -- txdatak1
			txdatak2                 : out std_logic_vector(3 downto 0);                      -- txdatak2
			txdatak3                 : out std_logic_vector(3 downto 0);                      -- txdatak3
			txdetectrx0              : out std_logic;                                         -- txdetectrx0
			txdetectrx1              : out std_logic;                                         -- txdetectrx1
			txdetectrx2              : out std_logic;                                         -- txdetectrx2
			txdetectrx3              : out std_logic;                                         -- txdetectrx3
			txelecidle0              : out std_logic;                                         -- txelecidle0
			txelecidle1              : out std_logic;                                         -- txelecidle1
			txelecidle2              : out std_logic;                                         -- txelecidle2
			txelecidle3              : out std_logic;                                         -- txelecidle3
			txdeemph0                : out std_logic;                                         -- txdeemph0
			txdeemph1                : out std_logic;                                         -- txdeemph1
			txdeemph2                : out std_logic;                                         -- txdeemph2
			txdeemph3                : out std_logic;                                         -- txdeemph3
			txmargin0                : out std_logic_vector(2 downto 0);                      -- txmargin0
			txmargin1                : out std_logic_vector(2 downto 0);                      -- txmargin1
			txmargin2                : out std_logic_vector(2 downto 0);                      -- txmargin2
			txmargin3                : out std_logic_vector(2 downto 0);                      -- txmargin3
			txswing0                 : out std_logic;                                         -- txswing0
			txswing1                 : out std_logic;                                         -- txswing1
			txswing2                 : out std_logic;                                         -- txswing2
			txswing3                 : out std_logic;                                         -- txswing3
			phystatus0               : in  std_logic                      := 'X';             -- phystatus0
			phystatus1               : in  std_logic                      := 'X';             -- phystatus1
			phystatus2               : in  std_logic                      := 'X';             -- phystatus2
			phystatus3               : in  std_logic                      := 'X';             -- phystatus3
			rxdata0                  : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- rxdata0
			rxdata1                  : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- rxdata1
			rxdata2                  : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- rxdata2
			rxdata3                  : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- rxdata3
			rxdatak0                 : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rxdatak0
			rxdatak1                 : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rxdatak1
			rxdatak2                 : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rxdatak2
			rxdatak3                 : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rxdatak3
			rxelecidle0              : in  std_logic                      := 'X';             -- rxelecidle0
			rxelecidle1              : in  std_logic                      := 'X';             -- rxelecidle1
			rxelecidle2              : in  std_logic                      := 'X';             -- rxelecidle2
			rxelecidle3              : in  std_logic                      := 'X';             -- rxelecidle3
			rxstatus0                : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- rxstatus0
			rxstatus1                : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- rxstatus1
			rxstatus2                : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- rxstatus2
			rxstatus3                : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- rxstatus3
			rxvalid0                 : in  std_logic                      := 'X';             -- rxvalid0
			rxvalid1                 : in  std_logic                      := 'X';             -- rxvalid1
			rxvalid2                 : in  std_logic                      := 'X';             -- rxvalid2
			rxvalid3                 : in  std_logic                      := 'X';             -- rxvalid3
			rxdataskip0              : in  std_logic                      := 'X';             -- rxdataskip0
			rxdataskip1              : in  std_logic                      := 'X';             -- rxdataskip1
			rxdataskip2              : in  std_logic                      := 'X';             -- rxdataskip2
			rxdataskip3              : in  std_logic                      := 'X';             -- rxdataskip3
			rxblkst0                 : in  std_logic                      := 'X';             -- rxblkst0
			rxblkst1                 : in  std_logic                      := 'X';             -- rxblkst1
			rxblkst2                 : in  std_logic                      := 'X';             -- rxblkst2
			rxblkst3                 : in  std_logic                      := 'X';             -- rxblkst3
			rxsynchd0                : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- rxsynchd0
			rxsynchd1                : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- rxsynchd1
			rxsynchd2                : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- rxsynchd2
			rxsynchd3                : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- rxsynchd3
			currentcoeff0            : out std_logic_vector(17 downto 0);                     -- currentcoeff0
			currentcoeff1            : out std_logic_vector(17 downto 0);                     -- currentcoeff1
			currentcoeff2            : out std_logic_vector(17 downto 0);                     -- currentcoeff2
			currentcoeff3            : out std_logic_vector(17 downto 0);                     -- currentcoeff3
			currentrxpreset0         : out std_logic_vector(2 downto 0);                      -- currentrxpreset0
			currentrxpreset1         : out std_logic_vector(2 downto 0);                      -- currentrxpreset1
			currentrxpreset2         : out std_logic_vector(2 downto 0);                      -- currentrxpreset2
			currentrxpreset3         : out std_logic_vector(2 downto 0);                      -- currentrxpreset3
			txsynchd0                : out std_logic_vector(1 downto 0);                      -- txsynchd0
			txsynchd1                : out std_logic_vector(1 downto 0);                      -- txsynchd1
			txsynchd2                : out std_logic_vector(1 downto 0);                      -- txsynchd2
			txsynchd3                : out std_logic_vector(1 downto 0);                      -- txsynchd3
			txblkst0                 : out std_logic;                                         -- txblkst0
			txblkst1                 : out std_logic;                                         -- txblkst1
			txblkst2                 : out std_logic;                                         -- txblkst2
			txblkst3                 : out std_logic;                                         -- txblkst3
			txdataskip0              : out std_logic;                                         -- txdataskip0
			txdataskip1              : out std_logic;                                         -- txdataskip1
			txdataskip2              : out std_logic;                                         -- txdataskip2
			txdataskip3              : out std_logic;                                         -- txdataskip3
			rate0                    : out std_logic_vector(1 downto 0);                      -- rate0
			rate1                    : out std_logic_vector(1 downto 0);                      -- rate1
			rate2                    : out std_logic_vector(1 downto 0);                      -- rate2
			rate3                    : out std_logic_vector(1 downto 0);                      -- rate3
			rx_in0                   : in  std_logic                      := 'X';             -- rx_in0
			rx_in1                   : in  std_logic                      := 'X';             -- rx_in1
			rx_in2                   : in  std_logic                      := 'X';             -- rx_in2
			rx_in3                   : in  std_logic                      := 'X';             -- rx_in3
			tx_out0                  : out std_logic;                                         -- tx_out0
			tx_out1                  : out std_logic;                                         -- tx_out1
			tx_out2                  : out std_logic;                                         -- tx_out2
			tx_out3                  : out std_logic;                                         -- tx_out3
			msi_intfc_o              : out std_logic_vector(81 downto 0);                     -- msi_intfc
			msi_control_o            : out std_logic_vector(15 downto 0);                     -- msi_control
			msix_intfc_o             : out std_logic_vector(15 downto 0);                     -- msix_intfc
			intx_req_i               : in  std_logic                      := 'X';             -- intx_req
			intx_ack_o               : out std_logic;                                         -- intx_ack
			txs_address_i            : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- address
			txs_chipselect_i         : in  std_logic                      := 'X';             -- chipselect
			txs_byteenable_i         : in  std_logic_vector(15 downto 0)  := (others => 'X'); -- byteenable
			txs_readdata_o           : out std_logic_vector(127 downto 0);                    -- readdata
			txs_writedata_i          : in  std_logic_vector(127 downto 0) := (others => 'X'); -- writedata
			txs_read_i               : in  std_logic                      := 'X';             -- read
			txs_write_i              : in  std_logic                      := 'X';             -- write
			txs_burstcount_i         : in  std_logic_vector(5 downto 0)   := (others => 'X'); -- burstcount
			txs_readdatavalid_o      : out std_logic;                                         -- readdatavalid
			txs_waitrequest_o        : out std_logic;                                         -- waitrequest
			cra_chipselect_i         : in  std_logic                      := 'X';             -- chipselect
			cra_address_i            : in  std_logic_vector(13 downto 0)  := (others => 'X'); -- address
			cra_byteenable_i         : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- byteenable
			cra_read_i               : in  std_logic                      := 'X';             -- read
			cra_readdata_o           : out std_logic_vector(31 downto 0);                     -- readdata
			cra_write_i              : in  std_logic                      := 'X';             -- write
			cra_writedata_i          : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- writedata
			cra_waitrequest_o        : out std_logic;                                         -- waitrequest
			cra_irq_o                : out std_logic;                                         -- irq
			rxm_bar0_address_o       : out std_logic_vector(63 downto 0);                     -- address
			rxm_bar0_byteenable_o    : out std_logic_vector(15 downto 0);                     -- byteenable
			rxm_bar0_readdata_i      : in  std_logic_vector(127 downto 0) := (others => 'X'); -- readdata
			rxm_bar0_writedata_o     : out std_logic_vector(127 downto 0);                    -- writedata
			rxm_bar0_read_o          : out std_logic;                                         -- read
			rxm_bar0_write_o         : out std_logic;                                         -- write
			rxm_bar0_burstcount_o    : out std_logic_vector(5 downto 0);                      -- burstcount
			rxm_bar0_readdatavalid_i : in  std_logic                      := 'X';             -- readdatavalid
			rxm_bar0_waitrequest_i   : in  std_logic                      := 'X';             -- waitrequest
			rxm_bar2_address_o       : out std_logic_vector(63 downto 0);                     -- address
			rxm_bar2_byteenable_o    : out std_logic_vector(15 downto 0);                     -- byteenable
			rxm_bar2_readdata_i      : in  std_logic_vector(127 downto 0) := (others => 'X'); -- readdata
			rxm_bar2_writedata_o     : out std_logic_vector(127 downto 0);                    -- writedata
			rxm_bar2_read_o          : out std_logic;                                         -- read
			rxm_bar2_write_o         : out std_logic;                                         -- write
			rxm_bar2_burstcount_o    : out std_logic_vector(5 downto 0);                      -- burstcount
			rxm_bar2_readdatavalid_i : in  std_logic                      := 'X';             -- readdatavalid
			rxm_bar2_waitrequest_i   : in  std_logic                      := 'X';             -- waitrequest
			rxm_irq_i                : in  std_logic_vector(15 downto 0)  := (others => 'X')  -- irq
		);
	end component pcie;

