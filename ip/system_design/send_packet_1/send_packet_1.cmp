	component send_packet_1 is
		port (
			clk_original   : in  std_logic                     := 'X';             -- clk
			rst            : in  std_logic                     := 'X';             -- reset
			ram_addr       : out std_logic_vector(9 downto 0);                     -- address
			ram_chipselect : out std_logic;                                        -- chipselect
			ram_write      : out std_logic;                                        -- write
			ram_readdata   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			ram_writedata  : out std_logic_vector(31 downto 0);                    -- writedata
			ram_byteenable : out std_logic_vector(3 downto 0);                     -- byteenable
			ff_tx_data     : out std_logic_vector(7 downto 0);                     -- data
			ff_tx_eop      : out std_logic;                                        -- endofpacket
			ff_tx_err      : out std_logic;                                        -- error
			ff_tx_rdy      : in  std_logic                     := 'X';             -- ready
			ff_tx_sop      : out std_logic;                                        -- startofpacket
			ff_tx_wren     : out std_logic;                                        -- valid
			start_ram_addr : in  std_logic_vector(24 downto 0) := (others => 'X'); -- start_ram_addr
			cmd_send       : in  std_logic                     := 'X'              -- cmd_send
		);
	end component send_packet_1;

