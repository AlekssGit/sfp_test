--altera_syncram ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" ADDRESS_REG_B="CLOCK1" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone 10 GX" ENABLE_ECC="FALSE" LOW_POWER_MODE="AUTO" NUMWORDS_A=32 NUMWORDS_B=32 OPERATION_MODE="DUAL_PORT" OUTDATA_ACLR_B="NONE" OUTDATA_REG_B="UNREGISTERED" POWER_UP_UNINITIALIZED="FALSE" READ_DURING_WRITE_MODE_MIXED_PORTS="DONT_CARE" WIDTH_A=10 WIDTH_B=10 WIDTH_BYTEENA_A=1 WIDTHAD_A=5 WIDTHAD_B=5 address_a address_b clock0 clock1 data_a q_b wren_a CARRY_CHAIN="MANUAL" CYCLONEII_M4K_COMPATIBILITY="ON"
--VERSION_BEGIN 21.3 cbx_altera_syncram 2021:09:23:13:04:43:SC cbx_altera_syncram_nd_impl 2021:09:23:13:04:43:SC cbx_altsyncram 2021:09:23:13:04:43:SC cbx_lpm_add_sub 2021:09:23:13:04:43:SC cbx_lpm_compare 2021:09:23:13:04:43:SC cbx_lpm_decode 2021:09:23:13:04:43:SC cbx_lpm_mux 2021:09:23:13:04:43:SC cbx_mgl 2021:09:23:13:04:52:SC cbx_nadder 2021:09:23:13:04:43:SC cbx_stratix 2021:09:23:13:04:43:SC cbx_stratixii 2021:09:23:13:04:43:SC cbx_stratixiii 2021:09:23:13:04:43:SC cbx_stratixv 2021:09:23:13:04:43:SC cbx_util_mgl 2021:09:23:13:04:43:SC  VERSION_END


-- Copyright (C) 2021  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION altsyncram_qc74 (address_a[4..0], address_b[4..0], clock0, clock1, data_a[9..0], wren_a)
RETURNS ( q_b[9..0]);

--synthesis_resources = M20K 1 
SUBDESIGN altera_syncram_mik1
( 
	address_a[4..0]	:	input;
	address_b[4..0]	:	input;
	clock0	:	input;
	clock1	:	input;
	data_a[9..0]	:	input;
	q_b[9..0]	:	output;
	wren_a	:	input;
) 
VARIABLE 
	altsyncram1 : altsyncram_qc74;

BEGIN 
	altsyncram1.address_a[] = address_a[];
	altsyncram1.address_b[] = address_b[];
	altsyncram1.clock0 = clock0;
	altsyncram1.clock1 = clock1;
	altsyncram1.data_a[] = data_a[];
	altsyncram1.wren_a = wren_a;
	q_b[] = altsyncram1.q_b[];
END;
--VALID FILE
